name: Terraform CI/CD Pipeline

on:
  push:
    branches:
      - main
    tags:
      - 'test-*'
      - 'staging-*'
      - 'prod-*'

env:
  TF_VERSION: 1.5.0 # Set your Terraform version
  AWS_REGION: us-east-1 # Change to your AWS region

jobs:
  terraform:
    name: Terraform Workflow
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:
      # Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Set up Terraform CLI
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}

      # Set up AWS credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::123456789012:role/GitHubActionsDeployRole # Replace with your IAM role
          aws-region: ${{ env.AWS_REGION }}

      # Determine the environment from the tag
      - name: Extract Environment from Tag
        id: extract-env
        run: |
          TAG_NAME="${{ github.ref_name }}"
          if [[ $TAG_NAME == test-* ]]; then
            echo "env=test" >> $GITHUB_ENV
            echo "path=terraform_files/envs/test" >> $GITHUB_ENV
          elif [[ $TAG_NAME == staging-* ]]; then
            echo "env=staging" >> $GITHUB_ENV
            echo "path=terraform_files/envs/staging" >> $GITHUB_ENV
          elif [[ $TAG_NAME == prod-* ]]; then
            echo "env=prod" >> $GITHUB_ENV
            echo "path=terraform_files/envs/prod" >> $GITHUB_ENV
          else
            echo "Invalid tag format. Use test-*, staging-* or prod-*"
            exit 1
          fi

      # Print Environment Variables
      - name: Print Environment
        run: |
          echo "Environment: ${{ env.env }}"
          echo "Terraform Path: ${{ env.path }}"

      # Validate Terraform files
      - name: Terraform Validate
        run: terraform validate
        working-directory: ${{ env.path }}

      # Terraform Init
      - name: Terraform Init
        run: terraform init -input=false
        working-directory: ${{ env.path }}

      # Terraform Plan
      - name: Terraform Plan
        run: |
          terraform plan -input=false -var-file=${{ env.env }}.tfvars
        working-directory: ${{ env.path }}

      # Terraform Apply (conditional on branch or tag)
      - name: Terraform Apply
        if: github.event_name == 'push'
        run: |
          terraform apply -input=false -auto-approve -var-file=${{ env.env }}.tfvars
        working-directory: ${{ env.path }}
